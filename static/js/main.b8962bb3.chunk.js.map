{"version":3,"sources":["components/InsertTodo/InsertTodo.styles.tsx","components/InsertTodo/InsertTodo.component.tsx","assets/edit.svg","assets/delete.svg","assets/save.svg","assets/cancel.svg","components/SingleTodo/SingleTodo.styles.tsx","components/SingleTodo/SingleTodo.component.tsx","components/TodoList/TodoList.styles.tsx","components/TodoList/TodoList.component.tsx","components/Footer/Footer.styles.tsx","components/Footer/Footer.component.tsx","App.styles.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","InsertTodo","addTodo","props","useState","title","setTitle","name","type","value","onChange","e","target","id","onClick","trim","ShowModeWrapper","EditModeWrapper","MenuWrapper","ImageWrapper","InputWrapper","SingleTodo","todo","toggleCompleted","deleteTodo","editTodo","editMode","setEditMode","newTitle","setNewTitle","isVisible","className","src","save","alt","cancel","checked","completed","edit","remove","StyledList","ul","displayName","TodoList","todos","map","FooterWrapper","StyledFooterButton","button","Footer","markAll","filterAll","filterActive","filterCompleted","AppWrapper","App","setTodos","newTodo","Math","random","toggledTodo","find","deletedTodo","filter","editedTodo","allCompleted","all","active","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8962bb3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 10% auto;\n  input {\n    padding: 2px 10px;\n    border: none;\n    border-radius: 10px;\n    margin: 0 10px;\n    background-color: #282c34;\n    min-height: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n  }\n  h2 {\n    font-size: 18px;\n    text-align: center;\n    color: white;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n  }\n  button {\n    flex: 1 1 auto;\n    padding: 20px 10px;\n    border: none;\n    margin: 10px;\n    text-align: center;\n    text-transform: uppercase;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: white;\n    font-weight: bold;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n    border-radius: 10px;\n    background-image: linear-gradient(\n      to right,\n      #f6d365 0%,\n      #fda085 51%,\n      #f6d365 100%\n    );\n    &:hover {\n      background-position: right center;\n    }\n  }\n`;\n\nexport { Wrapper };\n","import { ChangeEvent, useState } from \"react\";\n\nimport { Wrapper } from \"components/InsertTodo/InsertTodo.styles\";\n\ninterface InsertTodoProps {\n  addTodo(title: string): void;\n}\n\nconst InsertTodo: React.FC<InsertTodoProps> = ({ addTodo, ...props }) => {\n  const [title, setTitle] = useState<string>(\"\");\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const onClickHandler = () => {\n    if (!title.trim()) return;\n    addTodo(title);\n\n    // empty input field after todo is added\n    setTitle(\"\");\n  };\n\n  return (\n    <Wrapper {...props}>\n      <h2>What would you like to learn?</h2>\n      <input\n        name=\"title\"\n        type=\"text\"\n        value={title}\n        onChange={onChangeHandler}\n      />\n      <button id=\"add-btn\" onClick={onClickHandler}>\n        Add\n      </button>\n    </Wrapper>\n  );\n};\n\nexport default InsertTodo;\n","export default __webpack_public_path__ + \"static/media/edit.9de65eb5.svg\";","export default __webpack_public_path__ + \"static/media/delete.6dcadd95.svg\";","export default __webpack_public_path__ + \"static/media/save.a9b279a8.svg\";","export default __webpack_public_path__ + \"static/media/cancel.c0208fb6.svg\";","import styled from \"styled-components\";\n\nconst ShowModeWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n  &:last-child {\n    border-bottom: none;\n  }\n  h2 {\n    font-size: 18px;\n    margin: 0 25px;\n    color: white;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst EditModeWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  input {\n    width: 250px;\n    padding: 2px 10px;\n    border: none;\n    border-radius: 10px;\n    margin: 0 10px;\n    background-color: #282c34;\n    min-height: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n  }\n`;\n\nconst MenuWrapper = styled.div`\n  display: flex;\n  justify-content: right;\n  align-items: center;\n  width: 100px;\n`;\n\nconst ImageWrapper = styled.div`\n  width: 20px;\n  margin-top: 4px;\n  margin-left: 4px;\n`;\n\nconst InputWrapper = styled.div``;\n\nexport {\n  ShowModeWrapper,\n  EditModeWrapper,\n  MenuWrapper,\n  ImageWrapper,\n  InputWrapper,\n};\n","import { ChangeEvent, useState } from \"react\";\nimport Switch from \"react-switch\";\n\nimport { Todo } from \"App\";\nimport edit from \"assets/edit.svg\";\nimport remove from \"assets/delete.svg\";\nimport save from \"assets/save.svg\";\nimport cancel from \"assets/cancel.svg\";\n\nimport {\n  ShowModeWrapper,\n  EditModeWrapper,\n  MenuWrapper,\n  ImageWrapper,\n  InputWrapper,\n} from \"components/SingleTodo/SingleTodo.styles\";\n\ninterface SingleTodoProps {\n  todo: Todo;\n  toggleCompleted(id: number): void;\n  deleteTodo(id: number): void;\n  editTodo(id: number, title: string): void;\n}\n\nconst SingleTodo: React.FC<SingleTodoProps> = ({\n  todo,\n  toggleCompleted,\n  deleteTodo,\n  editTodo,\n}) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [newTitle, setNewTitle] = useState<string>(\"\");\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(e.target.value);\n  };\n\n  const onClickEditHandler = (id: number, title: string) => {\n    editTodo(id, title);\n    setNewTitle(\"\");\n    setEditMode(false);\n  };\n\n  return (\n    <>\n      {todo.isVisible ? (\n        <>\n          {editMode ? (\n            <EditModeWrapper>\n              <InputWrapper>\n                <input\n                  className=\"edit-field\"\n                  name=\"todo\"\n                  type=\"text\"\n                  value={newTitle || todo.title}\n                  onChange={onChangeHandler}\n                />\n              </InputWrapper>\n              <MenuWrapper>\n                <ImageWrapper\n                  className=\"save-btn\"\n                  onClick={() => onClickEditHandler(todo.id, newTitle)}\n                >\n                  <img src={save} alt=\"save\" />\n                </ImageWrapper>\n                <ImageWrapper onClick={() => setEditMode(false)}>\n                  <img src={cancel} alt=\"cancel\" />\n                </ImageWrapper>\n              </MenuWrapper>\n            </EditModeWrapper>\n          ) : (\n            <ShowModeWrapper>\n              <h2>{todo.title}</h2>\n              <MenuWrapper>\n                <Switch\n                  checked={todo.completed}\n                  onChange={() => toggleCompleted(todo.id)}\n                />\n                <ImageWrapper\n                  className=\"edit-btn\"\n                  onClick={() => setEditMode(true)}\n                >\n                  <img src={edit} alt=\"edit\" />\n                </ImageWrapper>\n                <ImageWrapper\n                  className=\"delete-btn\"\n                  onClick={() => deleteTodo(todo.id)}\n                >\n                  <img src={remove} alt=\"remove\" />\n                </ImageWrapper>\n              </MenuWrapper>\n            </ShowModeWrapper>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default SingleTodo;\n","import styled from \"styled-components\";\n\nconst StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nStyledList.displayName = \"ul\";\n\nexport { StyledList };\n","import { Todo } from \"App\";\nimport SingleTodo from \"components/SingleTodo/SingleTodo.component\";\n\nimport { StyledList } from \"components/TodoList/TodoList.styles\";\n\ninterface TodoListProps {\n  todos: Todo[];\n  toggleCompleted(id: number): void;\n  deleteTodo(id: number): void;\n  editTodo(id: number, title: string): void;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({\n  todos,\n  toggleCompleted,\n  deleteTodo,\n  editTodo,\n}) => {\n  return (\n    <StyledList id=\"items\">\n      {todos.map((todo) => {\n        return (\n          <SingleTodo\n            key={todo.id}\n            todo={todo}\n            toggleCompleted={toggleCompleted}\n            deleteTodo={deleteTodo}\n            editTodo={editTodo}\n          />\n        );\n      })}\n    </StyledList>\n  );\n};\n\nexport default TodoList;\n","import styled from \"styled-components\";\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  width: 360px;\n  h2 {\n    color: white;\n    font-size: 18px;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst StyledFooterButton = styled.button`\n  flex: 1 1 auto;\n  padding: 20px 10px;\n  border: none;\n  margin: 10px;\n  text-align: center;\n  text-transform: uppercase;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  font-weight: bold;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  background-image: linear-gradient(\n    to right,\n    #f6d365 0%,\n    #fda085 51%,\n    #f6d365 100%\n  );\n  &:hover {\n    background-position: right center;\n  }\n`;\n\nStyledFooterButton.displayName = \"button\";\n\nexport { FooterWrapper, StyledFooterButton };\n","import {\n  FooterWrapper,\n  StyledFooterButton,\n} from \"components/Footer/Footer.styles\";\n\ninterface FooterProps {\n  markAll(): void;\n  filterAll(): void;\n  filterActive(): void;\n  filterCompleted(): void;\n}\n\nconst Footer: React.FC<FooterProps> = ({\n  markAll,\n  filterAll,\n  filterActive,\n  filterCompleted,\n}) => {\n  return (\n    <FooterWrapper>\n      <StyledFooterButton onClick={() => markAll()}>\n        Mark All Completed\n      </StyledFooterButton>\n      <div>\n        <h2>Filter</h2>\n        <StyledFooterButton onClick={() => filterAll()}>All</StyledFooterButton>\n        <StyledFooterButton onClick={() => filterActive()}>\n          Active\n        </StyledFooterButton>\n        <StyledFooterButton onClick={() => filterCompleted()}>\n          Completed\n        </StyledFooterButton>\n      </div>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 360px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 20px;\n  margin: 10px auto;\n  background-color: #e401f8;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n`;\n\nexport { AppWrapper };\n\n// .App {\n//   text-align: center;\n//   color: #ffffff;\n// }\n\n// .App-logo {\n//   height: 40vmin;\n//   pointer-events: none;\n// }\n\n// @media (prefers-reduced-motion: no-preference) {\n//   .App-logo {\n//     animation: App-logo-spin infinite 20s linear;\n//   }\n// }\n\n// .App-header {\n//   background-color: #282c34;\n//   min-height: 100vh;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   font-size: calc(10px + 2vmin);\n//   color: white;\n// }\n\n// .App-link {\n//   color: #61dafb;\n// }\n\n// @keyframes App-logo-spin {\n//   from {\n//     transform: rotate(0deg);\n//   }\n//   to {\n//     transform: rotate(360deg);\n//   }\n// }\n","import { useState } from \"react\";\n\nimport InsertTodo from \"components/InsertTodo/InsertTodo.component\";\nimport TodoList from \"components/TodoList/TodoList.component\";\nimport Footer from \"components/Footer/Footer.component\";\n\nimport { AppWrapper } from \"App.styles\";\n\nexport type Todo = {\n  id: number;\n  title: string;\n  completed: boolean;\n  isVisible: boolean;\n};\n\nconst App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodoHandler = (title: string) => {\n    const newTodo = {\n      id: Math.random(),\n      title,\n      completed: false,\n      isVisible: true,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const toggleCompletedHandler = (id: number) => {\n    const toggledTodo = todos.find((todo) => todo.id === id);\n\n    setTodos(\n      todos.map((todo) => {\n        if (toggledTodo && todo.id === toggledTodo.id)\n          todo.completed = !todo.completed;\n\n        return todo;\n      })\n    );\n  };\n\n  const deleteTodoHandler = (id: number) => {\n    const deletedTodo = todos.find((todo) => todo.id === id);\n\n    setTodos(\n      todos.filter((todo) => {\n        if (deletedTodo && todo.id === deletedTodo.id) return false;\n        return true;\n      })\n    );\n  };\n\n  const editTodoHandler = (id: number, newTitle: string) => {\n    const editedTodo = todos.find((todo) => todo.id === id);\n\n    setTodos(\n      todos.map((todo) => {\n        if (editedTodo && todo.id === editedTodo.id) {\n          editedTodo.title = newTitle;\n\n          return editedTodo;\n        }\n\n        return todo;\n      })\n    );\n  };\n\n  const markAllHandler = () => {\n    const allCompleted = todos.map((todo) => {\n      todo.completed = true;\n\n      return todo;\n    });\n\n    setTodos(allCompleted);\n  };\n\n  const filterActiveHandler = () => {\n    const active = todos.map((todo) => {\n      if (todo.completed) {\n        todo.isVisible = false;\n      }\n\n      return todo;\n    });\n\n    setTodos(active);\n  };\n\n  const filterCompletedHandler = () => {\n    const completed = todos.map((todo) => {\n      if (!todo.completed) {\n        todo.isVisible = false;\n      }\n\n      return todo;\n    });\n\n    setTodos(completed);\n  };\n\n  const filterAllHandler = () => {\n    const all = todos.map((todo) => {\n      todo.isVisible = true;\n\n      return todo;\n    });\n\n    setTodos(all);\n  };\n\n  return (\n    <AppWrapper className=\"wrapper\">\n      <InsertTodo addTodo={addTodoHandler} />\n      <TodoList\n        todos={todos}\n        toggleCompleted={toggleCompletedHandler}\n        deleteTodo={deleteTodoHandler}\n        editTodo={editTodoHandler}\n      />\n      <Footer\n        markAll={markAllHandler}\n        filterAll={filterAllHandler}\n        filterActive={filterActiveHandler}\n        filterCompleted={filterCompletedHandler}\n      />\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}